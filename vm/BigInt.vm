function BigInt.FromInt 3
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 8
call Array.new 1
pop this 0
push constant 8
pop this 2
push constant 0
pop local 0
push argument 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label WHILE_EXP0
push local 0
push constant 8
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
call IntExt.Inc 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 1
pop this 1
push pointer 0
return
label IF_FALSE0
label WHILE_EXP1
push argument 0
push constant 0
gt
not
if-goto WHILE_END1
push local 0
push this 0
add
push argument 0
call IntExt.LastNum 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 10
call Math.divide 2
pop argument 0
push local 0
call IntExt.Inc 1
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 0
pop this 1
push pointer 0
return
function BigInt.FromBigInt 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push pointer 0
return
function BigInt.Zero 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 8
call Array.new 1
pop this 0
push constant 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
pop this 1
push constant 8
pop this 2
push pointer 0
return
function BigInt.Print 1
push argument 0
pop pointer 0
push this 1
pop local 0
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push local 0
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
push local 0
call IntExt.Dec 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function BigInt.Add 11
push argument 0
call BigInt.GetDim 1
push argument 1
call BigInt.GetDim 1
call Math.max 2
pop local 0
push argument 0
call BigInt.GetMaxDim 1
push argument 1
call BigInt.GetMaxDim 1
call Math.max 2
pop local 1
push local 0
push local 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 2
call Math.multiply 2
pop local 1
label IF_FALSE0
push local 1
call Array.new 1
pop local 9
push constant 0
pop local 2
push constant 0
pop local 3
label WHILE_EXP0
push local 3
push local 0
lt
not
if-goto WHILE_END0
push local 3
push argument 0
call BigInt.GetDim 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push local 3
call BigInt.GetNum 2
pop local 4
goto IF_END1
label IF_FALSE1
push constant 0
pop local 4
label IF_END1
push local 3
push argument 1
call BigInt.GetDim 1
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push local 3
call BigInt.GetNum 2
pop local 5
goto IF_END2
label IF_FALSE2
push constant 0
pop local 5
label IF_END2
push local 4
push local 5
add
push local 2
add
pop local 6
push local 3
push local 9
add
push local 6
call IntExt.LastNum 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 6
push constant 10
call Math.divide 2
pop local 2
push local 3
call IntExt.Inc 1
pop local 3
goto WHILE_EXP0
label WHILE_END0
push local 2
push constant 0
eq
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push local 9
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
call IntExt.Inc 1
pop local 0
label IF_FALSE3
push local 0
pop local 3
label WHILE_EXP1
push local 3
push local 1
lt
not
if-goto WHILE_END1
push local 3
push local 9
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
call IntExt.Inc 1
pop local 3
goto WHILE_EXP1
label WHILE_END1
push local 9
push local 0
push local 1
call BigInt.FromBigInt 3
pop local 10
push local 10
return
function BigInt.Multiplication 34
push argument 0
call BigInt.GetDim 1
pop local 0
push argument 1
call BigInt.GetDim 1
pop local 1
push local 0
push constant 3
lt
push local 1
push constant 3
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
call IntExt.FromBigInt 1
push argument 1
call IntExt.FromBigInt 1
call Math.multiply 2
pop local 9
push local 9
call BigInt.FromInt 1
return
label IF_FALSE0
push local 0
push local 1
call Math.max 2
pop local 4
push argument 0
push local 4
call BigInt.IncreaseTo 2
pop argument 0
push argument 1
push local 4
call BigInt.IncreaseTo 2
pop argument 1
push argument 0
call BigInt.GetDim 1
pop local 0
push argument 1
call BigInt.GetDim 1
pop local 1
push local 0
push local 1
add
pop local 2
push argument 0
call BigInt.GetMaxDim 1
push argument 1
call BigInt.GetMaxDim 1
call Math.max 2
pop local 3
push local 2
push local 3
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 3
push constant 2
call Math.multiply 2
pop local 3
label IF_FALSE1
push local 0
push local 1
call Math.max 2
push constant 2
call Math.divide 2
pop local 6
push local 0
push local 6
sub
pop local 5
push argument 0
call BigInt.GetArray 1
pop local 12
push local 12
push local 6
push local 5
call ArrayExt.Slice 3
pop local 14
push local 12
push constant 0
push local 6
call ArrayExt.Slice 3
pop local 30
push local 0
push local 1
call Math.max 2
push constant 2
call Math.divide 2
pop local 8
push local 1
push local 8
sub
pop local 7
push argument 1
call BigInt.GetArray 1
pop local 13
push local 13
push local 8
push local 7
call ArrayExt.Slice 3
pop local 16
push local 13
push constant 0
push local 8
call ArrayExt.Slice 3
pop local 17
push local 14
push local 5
push local 5
call BigInt.FromBigInt 3
pop local 18
push local 30
push local 6
push local 6
call BigInt.FromBigInt 3
pop local 19
push local 16
push local 7
push local 7
call BigInt.FromBigInt 3
pop local 20
push local 17
push local 8
push local 8
call BigInt.FromBigInt 3
pop local 21
push local 6
call BigInt.FromInt 1
pop local 23
push local 6
push constant 2
call Math.multiply 2
call BigInt.FromInt 1
pop local 24
push local 18
push local 20
call BigInt.Multiplication 2
pop local 25
push local 19
push local 20
call BigInt.Multiplication 2
pop local 26
push local 18
push local 21
call BigInt.Multiplication 2
pop local 27
push local 26
push local 27
call BigInt.Add 2
pop local 28
push local 19
push local 21
call BigInt.Multiplication 2
pop local 29
push local 25
push local 24
call BigInt.MoveLeft 2
pop local 30
push local 28
push local 23
call BigInt.MoveLeft 2
pop local 31
push local 29
pop local 32
push local 30
push local 31
call BigInt.Add 2
pop local 22
push local 22
push local 32
call BigInt.Add 2
pop local 22
push local 22
return
function BigInt.GetArray 0
push argument 0
pop pointer 0
push this 0
return
function BigInt.GetNum 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
return
function BigInt.GetDim 0
push argument 0
pop pointer 0
push this 1
return
function BigInt.GetMaxDim 0
push argument 0
pop pointer 0
push this 2
return
function BigInt.IncreaseTo 2
push argument 0
pop pointer 0
push this 1
push argument 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
return
label IF_FALSE0
push constant 0
pop local 1
push argument 1
call Array.new 1
pop local 0
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push local 1
push local 0
add
push local 1
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
call IntExt.Inc 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
label WHILE_EXP1
push local 1
push argument 1
lt
not
if-goto WHILE_END1
push local 1
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
call IntExt.Inc 1
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
pop this 0
push argument 1
pop this 1
push argument 1
pop this 2
push pointer 0
return
function BigInt.MoveLeft 4
push argument 0
pop pointer 0
push this 2
call Array.new 1
pop local 3
push argument 1
call IntExt.FromBigInt 1
pop local 1
push this 1
push local 1
add
pop local 0
push local 0
push this 2
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
call Array.new 1
pop local 3
label IF_FALSE0
push this 1
pop local 2
label WHILE_EXP0
push local 2
push constant 0
gt
not
if-goto WHILE_END0
push local 2
push local 1
add
push constant 1
sub
push local 3
add
push local 2
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
call IntExt.Dec 1
pop local 2
goto WHILE_EXP0
label WHILE_END0
label WHILE_EXP1
push local 2
push local 1
lt
not
if-goto WHILE_END1
push local 2
push local 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
call IntExt.Inc 1
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 3
pop this 0
push local 0
pop this 1
push local 0
pop this 2
push pointer 0
return
